<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.tobe.mapper.EmployeeMapper">
    <select id="getAllList" resultType="Employee">
        select * from Employee where empl_yn = 'y'
    </select>

    <select id="getPickList" resultType="Employee">
        SELECT *
        FROM Employee
<!--        WHERE employee_id LIKE CONCAT('%', #{employeeId}, '%')-->
        <where>
            <if test="employeeId != '' and employeeId != null">
                AND employee_id LIKE CONCAT('%', #{employeeId}, '%')
            </if>
            <if test="employeeName != '' and employeeName != null">
                AND employee_name LIKE CONCAT('%', #{employeeName}, '%')
            </if>
            <if test="employeeTel != '' and employeeTel != null">
                AND employee_tel LIKE CONCAT('%', #{employeeTel}, '%')
            </if>
            <if test="employeeEmail != '' and employeeEmail != null">
                AND employee_email LIKE CONCAT('%', #{employeeEmail}, '%')
            </if>
            <if test="employeeAddr != '' and employeeAddr != null">
                AND employee_addr LIKE CONCAT('%', #{employeeAddr}, '%')
            </if>
            <if test="hireDate != '' and hireDate != null">
                AND hire_date LIKE CONCAT('%', #{hireDate}, '%')
            </if>
            <if test="employeeManagerId != '' and employeeManagerId != null">
                AND employee_manager_id LIKE CONCAT('%', #{employeeManagerId}, '%')
            </if>
            <if test="authorityGrade != '' and authorityGrade != null">
                AND authority_grade LIKE CONCAT('%', #{authorityGrade}, '%')
            </if>
        </where>
    </select>



    <insert id="employeeRegistTest" parameterType="java.util.List">

        INSERT INTO Employee (
        employee_id,
        employee_pw,
        employee_name,
        employee_tel,
        employee_email,
        employee_addr,
        resident_num,
        hire_date,
        salary,
        employee_manager_id,
        authority_grade,
        empl_yn
        )
        VALUES
        <foreach collection="list" item="Employee" separator=",">
            (#{Employee.employeeId}, #{Employee.employeePw}, #{Employee.employeeName},
            #{Employee.employeeTel}, #{Employee.employeeEmail}, #{Employee.employeeAddr},
            #{Employee.residentNum}, #{Employee.hireDate}, #{Employee.salary},
            #{Employee.employeeManagerId}, #{Employee.authorityGrade},'y')
        </foreach>
    </insert>

    <update id="employeeUpdateTest" parameterType="Employee" >
            UPDATE Employee
            SET
            employee_pw = #{employeePw},
            employee_name = #{employeeName},
            employee_tel = #{employeeTel},
            employee_email = #{employeeEmail},
            employee_addr = #{employeeAddr},
            resident_num = #{residentNum},
            hire_date = #{hireDate},
            salary = #{salary},
            employee_manager_id = #{employeeManagerId},
            authority_grade = #{authorityGrade}
            WHERE employee_id = #{employeeId}
    </update>

    <update id="employeeDeleteTest" parameterType="java.util.List">
        UPDATE Employee
        SET empl_yn = 'n'
        WHERE employee_id IN
        <foreach collection="list" item="employeeId" open="(" separator="," close=")">
            #{employeeId}
        </foreach>
    </update>

</mapper>